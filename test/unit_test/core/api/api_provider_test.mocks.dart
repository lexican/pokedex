// Mocks generated by Mockito 5.3.2 from annotations
// in pokedex/test/unit_test/core/api/api_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex/src/core/api/api_provider.dart' as _i3;
import 'package:pokedex/src/core/models/pokemon/pokemon.dart' as _i6;
import 'package:pokedex/src/core/services/api/api_service.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiProvider extends _i1.Mock implements _i3.ApiProvider {
  MockApiProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response<dynamic>> getPokemon({
    required String? path,
    Map<String, dynamic>? headers,
    _i2.ValidateStatus? validateStatus,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPokemon,
          [],
          {
            #path: path,
            #headers: headers,
            #validateStatus: validateStatus,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getPokemon,
            [],
            {
              #path: path,
              #headers: headers,
              #validateStatus: validateStatus,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);
  @override
  _i4.Future<_i2.Response<dynamic>> getPokemons({
    int? offset,
    int? limit,
    required String? path,
    Map<String, dynamic>? headers,
    _i2.ValidateStatus? validateStatus,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPokemons,
          [],
          {
            #offset: offset,
            #limit: limit,
            #path: path,
            #headers: headers,
            #validateStatus: validateStatus,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getPokemons,
            [],
            {
              #offset: offset,
              #limit: limit,
              #path: path,
              #headers: headers,
              #validateStatus: validateStatus,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i5.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i6.Pokemon>> getPokemons({
    int? offset,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPokemons,
          [],
          {
            #offset: offset,
            #limit: limit,
          },
        ),
        returnValue: _i4.Future<List<_i6.Pokemon>>.value(<_i6.Pokemon>[]),
      ) as _i4.Future<List<_i6.Pokemon>>);
  @override
  _i4.Future<List<_i6.Pokemon>> getUpdatedPokemons() => (super.noSuchMethod(
        Invocation.method(
          #getUpdatedPokemons,
          [],
        ),
        returnValue: _i4.Future<List<_i6.Pokemon>>.value(<_i6.Pokemon>[]),
      ) as _i4.Future<List<_i6.Pokemon>>);
}
